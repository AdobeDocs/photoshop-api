{"version":3,"file":"85506fab-acdf22242d334919556f.js","mappings":"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","sources":["webpack://dev-site-documentation-template/./src/@adobe/gatsby-theme-aio/components/TextBlock/index.js"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport React, { cloneElement, useEffect, useState } from 'react';\nimport { css } from '@emotion/react';\n// import { HeroButtons } from '../Hero';\nimport { HeroButtons } from '@adobe/gatsby-theme-aio/src/components/Hero';\n// import { Media } from '../Media';\nimport { Media } from '@adobe/gatsby-theme-aio/src/components/Media';\nimport '@spectrum-css/typography';\nimport PropTypes from 'prop-types';\n// import { layoutColumns, DESKTOP_SCREEN_WIDTH, TABLET_SCREEN_WIDTH } from '../../utils';\nimport { layoutColumns, DESKTOP_SCREEN_WIDTH, TABLET_SCREEN_WIDTH } from '@adobe/gatsby-theme-aio/src/utils';\nimport classNames from 'classnames';\n\nconst counter = {\n  2: 0,\n  3: 0,\n  4: 0\n};\nconst alignMapping = ['margin-left: 0;', 'margin-right: 0;'];\n\nconst mediaCSS = css`\n  & {\n    display: inline;\n    width: ${layoutColumns(6)};\n    box-sizing: border-box;\n    padding: var(--spectrum-global-dimension-size-200);\n\n    @media screen and (max-width: ${TABLET_SCREEN_WIDTH}) {\n      display: block;\n      width: 100%;\n    }\n  }\n`;\n\nconst Icons = ({ icons, isCentered }) =>\n  icons\n    ? cloneElement(icons, {\n        css: css`\n          list-style: none;\n          padding: 0;\n          margin-bottom: var(--spectrum-global-dimension-size-400) !important;\n          display: flex;\n          justify-content: ${isCentered ? 'center' : 'flex-start'};\n\n          & li {\n            display: flex;\n            border-right: 1px solid var(--spectrum-global-color-gray-300);\n            height: var(--spectrum-global-dimension-size-600);\n            margin-right: var(--spectrum-global-dimension-size-150);\n          }\n\n          & li:last-of-type {\n            padding-right: 0;\n            border-right: none;\n          }\n\n          .gatsby-resp-image-wrapper {\n            position: relative;\n            width: var(--spectrum-global-dimension-size-800) !important;\n          }\n\n          .gatsby-resp-image-image {\n            position: absolute;\n            top: 0;\n            left: 0;\n            height: 100%;\n            object-fit: contain;\n          }\n        `\n      })\n    : null;\n\nconst Texts = ({ texts }) => {\n  const textKeys = Object.keys(texts).filter((key) => key.startsWith('text'));\n  return textKeys.map((textKey) => texts[textKey]);\n};\n\nconst Bullets = ({ bullets }) => {\n  const textKeys = Object.keys(bullets).filter((key) => key.startsWith('bullet'));\n  return textKeys.map((textKey) => bullets[textKey]);\n};\n\nconst Links = ({ links, isCentered }) =>\n  links\n    ? cloneElement(links, {\n        css: css`\n          list-style: none;\n          padding: 0;\n          display: flex;\n          justify-content: ${isCentered ? 'center' : 'flex-start'};\n          margin-top: ${isCentered\n            ? 'var(--spectrum-global-dimension-size-200) !important;'\n            : 'var(--spectrum-global-dimension-size-600) !important;'};\n\n          & li {\n            display: flex;\n            align-items: center;\n            height: var(--spectrum-global-dimension-size-400);\n          }\n\n          & li a {\n            white-space: nowrap;\n            margin-right: var(--spectrum-global-dimension-size-600);\n          }\n\n          & li:last-of-type a {\n            margin-right: 0;\n          }\n\n          .gatsby-resp-image-wrapper {\n            max-width: none !important;\n            width: 100% !important;\n            height: 100% !important;\n          }\n\n          .gatsby-resp-image-wrapper {\n            width: var(--spectrum-global-dimension-size-400) !important;\n            margin-left: 0 !important;\n            margin-right: var(--spectrum-global-dimension-size-150) !important;\n          }\n\n          .gatsby-resp-image-image {\n            object-fit: contain;\n          }\n\n          @media screen and (max-width: ${TABLET_SCREEN_WIDTH}) {\n            flex-direction: column;\n            align-items: ${isCentered ? 'center' : 'left'};\n\n            li {\n              margin-top: var(--spectrum-global-dimension-size-100);\n            }\n\n            li a {\n              margin-right: 0;\n            }\n          }\n        `\n      })\n    : null;\n\nconst TextBlock = ({\n  className,\n  heading,\n  links,\n  buttons,\n  midbuttons,\n  icons,\n  image,\n  video,\n  theme = 'lightest',\n  width = '100%',\n  isCentered = false,\n  ...props\n}) => {\n  let initColumns = 100 / parseFloat(width);\n\n  if (width === '33%') {\n    width = `${(100 / 3).toFixed(2)}%`;\n    initColumns = 3;\n  }\n\n  const [columns] = useState(initColumns);\n\n  useEffect(() => {\n    return () => {\n      if (typeof counter[columns] !== 'undefined') {\n        counter[columns]--;\n      }\n    };\n  }, [columns]);\n\n  if (width !== '100%') {\n    isCentered = true;\n  }\n\n  if (isCentered) {\n    let blockWidth = '';\n    let extraMargin = '';\n\n    if (typeof counter[columns] !== 'undefined') {\n      counter[columns]++;\n    }\n\n    if (columns === 1) {\n      blockWidth = `max-width: ${layoutColumns(6)};`;\n    } else if (columns > 3) {\n      blockWidth = 'max-width: var(--spectrum-global-dimension-size-3600);';\n    } else {\n      blockWidth = 'max-width: var(--spectrum-global-dimension-size-4600);';\n      extraMargin = alignMapping[counter[columns] % columns];\n    }\n\n    return (\n      <>\n        <section\n          className={classNames(className, `spectrum--${theme}`)}\n          css={css`\n            display: table-cell;\n            width: ${width.replace('%', 'vw')};\n            background: var(--spectrum-global-color-gray-100);\n            padding: var(--spectrum-global-dimension-size-1000) 0;\n\n            @media screen and (max-width: ${TABLET_SCREEN_WIDTH}) {\n              display: block;\n              width: 100%;\n            }\n          `}>\n          <div\n            css={css`\n              ${blockWidth}\n              padding: 0 var(--spectrum-global-dimension-size-400);\n              margin: auto;\n              ${extraMargin}\n\n              @media screen and (max-width: ${TABLET_SCREEN_WIDTH}) {\n                max-width: none;\n                margin: auto;\n              }\n            `}>\n            <Icons icons={icons} isCentered={isCentered} />\n\n            {image &&\n              cloneElement(image, {\n                css: css`\n                  height: var(--spectrum-global-dimension-size-1000);\n                  margin-top: 0;\n                  margin-bottom: var(--spectrum-global-dimension-size-300);\n\n                  .gatsby-resp-image-wrapper {\n                    position: relative;\n                    max-width: none !important;\n                    width: 100% !important;\n                    height: 100% !important;\n                  }\n\n                  .gatsby-resp-image-image {\n                    position: absolute;\n                    top: 0;\n                    left: 0;\n                    height: 100%;\n                    object-fit: contain;\n                  }\n                `\n              })}\n\n            {heading && (\n              <h3\n                className=\"spectrum-Heading spectrum-Heading--sizeM\"\n                css={css`\n                  margin-bottom: var(--spectrum-global-dimension-size-200) !important;\n\n                  & ~ p {\n                    margin-top: 0;\n                    margin-bottom: 0 !important;\n                  }\n                `}>\n                {heading.props.children}\n              </h3>\n            )}\n\n            <Texts texts={props} />\n\n            <HeroButtons\n              buttons={buttons}\n              css={css`\n                margin-top: var(--spectrum-global-dimension-size-150);\n                margin-bottom: var(--spectrum-global-dimension-size-150);\n                justify-content: center;\n              `}\n            />\n\n            <HeroButtons\n              buttons={midbuttons}\n              css={css`\n                margin-top: var(--spectrum-global-dimension-size-150);\n                margin-bottom: var(--spectrum-global-dimension-size-150);\n                justify-content: left;\n              `}\n            />\n\n            <Bullets bullets={props} />\n\n            <Links links={links} isCentered={isCentered} />\n\n            <Media css={mediaCSS} video={video} />\n          </div>\n        </section>\n        {width === '100%' || (typeof counter[columns] !== 'undefined' && counter[columns] % columns === 0) ? (\n          <div aria-hidden=\"true\" />\n        ) : null}\n      </>\n    );\n  } else {\n    const isReversed = props.slots.endsWith('image') || props.slots.endsWith('video');\n\n    return (\n      <section\n        className={classNames(className, `spectrum--${theme}`)}\n        css={css`\n          width: 100%;\n          background: var(--spectrum-global-color-gray-100);\n        `}>\n        <div\n          css={css`\n            width: ${DESKTOP_SCREEN_WIDTH};\n            box-sizing: border-box;\n            margin: auto;\n            padding: var(--spectrum-global-dimension-size-1000) 0;\n\n            @media screen and (max-width: ${DESKTOP_SCREEN_WIDTH}) {\n              width: 100%;\n\n              & > div {\n                flex-direction: column !important;\n              }\n            }\n          `}>\n          <div\n            css={css`\n              display: flex;\n              align-items: center;\n              flex-direction: ${isReversed ? 'row-reverse' : 'row'};\n\n              @media screen and (max-width: ${TABLET_SCREEN_WIDTH}) {\n                flex-direction: column;\n              }\n            `}>\n            {image &&\n              cloneElement(image, {\n                css: css`\n                  display: flex;\n                  align-items: center;\n                  justify-content: center;\n                  width: 50%;\n                  height: calc(var(--spectrum-global-dimension-size-4600) - var(--spectrum-global-dimension-size-225));\n                  box-sizing: border-box;\n                  padding: var(--spectrum-global-dimension-size-200);\n                  margin-top: 0;\n\n                  .gatsby-resp-image-wrapper {\n                    max-width: none !important;\n                    width: 100% !important;\n                    height: 100% !important;\n                  }\n\n                  .gatsby-resp-image-image {\n                    object-fit: contain;\n                  }\n\n                  @media screen and (max-width: ${TABLET_SCREEN_WIDTH}) {\n                    height: auto;\n                    width: 100%;\n                  }\n                `\n              })}\n\n            <Media css={mediaCSS} video={video} />\n\n            <div\n              css={css`\n                width: 50%;\n                display: flex;\n                flex-direction: column;\n                justify-content: center;\n                text-align: left;\n                box-sizing: border-box;\n                padding: 0 var(--spectrum-global-dimension-size-400);\n\n                @media screen and (max-width: ${TABLET_SCREEN_WIDTH}) {\n                  width: 100%;\n                  margin: var(--spectrum-global-dimension-size-400) 0;\n                }\n              `}>\n              <Icons icons={icons} isCentered={isCentered} />\n\n              {heading && (\n                <h3\n                  className=\"spectrum-Heading spectrum-Heading--sizeM\"\n                  css={css`\n                    margin-top: 0 !important;\n                    margin-bottom: var(--spectrum-global-dimension-size-200) !important;\n\n                    & + p {\n                      margin-top: 0 !important;\n                    }\n                  `}>\n                  {heading.props.children}\n                </h3>\n              )}\n\n              <Texts texts={props} />\n\n              <HeroButtons\n                buttons={buttons}\n                css={css`\n                  margin-top: var(--spectrum-global-dimension-size-200);\n                `}\n              />\n\n              <Links links={links} isCentered={isCentered} />\n            </div>\n          </div>\n        </div>\n      </section>\n    );\n  }\n};\n\nTextBlock.propTypes = {\n  heading: PropTypes.element,\n  links: PropTypes.element,\n  icons: PropTypes.element,\n  buttons: PropTypes.element,\n  image: PropTypes.element,\n  video: PropTypes.element,\n  theme: PropTypes.string,\n  width: PropTypes.oneOf(['100%', '50%', '33%', '25%']),\n  isCentered: PropTypes.bool\n};\n\nexport { TextBlock };\n"],"names":["counter","alignMapping","mediaCSS","css","layoutColumns","TABLET_SCREEN_WIDTH","Icons","_ref8","icons","isCentered","cloneElement","Texts","_ref9","texts","Object","keys","filter","key","startsWith","map","textKey","Bullets","_ref10","bullets","Links","_ref11","links","_ref","name","styles","_ref2","_ref3","_ref4","_ref5","_ref6","_ref7","TextBlock","_ref12","className","heading","buttons","midbuttons","image","video","_ref12$theme","theme","_ref12$width","width","_ref12$isCentered","props","_objectWithoutPropertiesLoose","_excluded","initColumns","parseFloat","toFixed","columns","useState","useEffect","blockWidth","extraMargin","___EmotionJSX","React","classNames","replace","children","HeroButtons","Media","isReversed","slots","endsWith","DESKTOP_SCREEN_WIDTH"],"sourceRoot":""}